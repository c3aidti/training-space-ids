name: Sync develop to dev branches
on:
#   push:
#     branches:
#       - develop
  workflow_dispatch:

jobs:
  createSyncMatrix:
    runs-on: ubuntu-latest
    env:
      REF: ${{ github.event.ref }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }} 
    steps:
      - name: Set the value
        id: step_one
        run: |
          echo "UPDATE_BRANCH=`basename $REF`" >> $GITHUB_ENV
      - name: Create sync Matrix
        id: set-matrix     
        run: echo "::set-output name=matrix::{\"include\":[{\"syncto\":\"tc02d\"},{\"syncto\":\"tc03d\"},{\"syncto\":\"tc01d\"}]}"

  create_develop_to_devs_prs:
    needs: createSyncMatrix
    runs-on: ubuntu-latest
    env:
      REF: ${{ github.event.ref }}
    strategy:
      matrix: ${{fromJSON(needs.createSyncMatrix.outputs.matrix)}}
    steps:
#       - name: Set the reference branch value
#         id: step_one
#         run: |
#           echo "UPDATE_BRANCH=`basename $REF`" >> $GITHUB_ENV
      - uses: actions/checkout@v2
#         with:
#           ref: ${{ matrix.syncto }}
#       - name: Reset Compare Branch
#         run: |
#           git fetch origin "${{ env.UPDATE_BRANCH }}:${{ env.UPDATE_BRANCH }}"
#           git reset --hard ${{ env.UPDATE_BRANCH }}
      - name: Create Pull Request
        id: cpr
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "develop"
          destination_branch: "${{ matrix.syncto }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_label: "automated pr"
          pr_title: "Sync develop to ${{ matrix.syncto }}"
          
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pr_number }}"
          
      - name: Approve PR
        if: "${{ steps.cpr.outputs.pr_number }}"
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: "${{ secrets.DTI_DEVOPS_TOKEN }}"
          pull-request-number:  "${{ steps.cpr.outputs.pr_number }}"
