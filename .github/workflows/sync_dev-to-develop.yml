############################################################################
#
#  Workflow to sychronize development branches
#
############################################################################
name: Sync tag-branch to develop
on:
  push:
    branches:
      - tc01d
      - tc02d
      - tc03d

jobs:
  createSyncMatrix:
    runs-on: ubuntu-latest
    env:
      REF: ${{ github.event.ref }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }} 
    steps:
      - name: Set the value
        id: step_one
        run: |
          echo "UPDATE_BRANCH=`basename $REF`" >> $GITHUB_ENV
      - name: Create sync Matrix
        if: "${{ env.UPDATE_BRANCH }} == 'tc01d'" 
        run: |
      - name: Create sync Matrix
        id: set-matrix     
        run: echo "::set-output name=matrix::{\"include\":[{\"syncto\":\"tc02d\",\"syncto\":\"tc03d\",\"syncto\":\"develop\"}]}"
          
    
  createPullRequest:
    needs: createSyncMatrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.createSyncMatrix.outputs.matrix)}}
    steps:
#       - name: Dump GitHub context
#         env:
#           GITHUB_CONTEXT: ${{ toJson(github) }}
#         run: |
#           echo "$GITHUB_CONTEXT"
      - name: Set the value
        id: step_one
        run: |
          echo "UPDATE_BRANCH=`basename $REF`" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        with:
          ref: ${{ matrix.syncto }}
#       - name: Reset Compare Branch
#         run: |
#           echo "Ref: ${{ github.event.ref }}"
#           echo "Ref:: ${GITHUB_REF##*/}"
#           echo "Update branch: ${{ env.UPDATE_BRANCH }}"
#           git fetch origin "${{ env.UPDATE_BRANCH }}:${GITHUB_REF##*/}"
#           git reset --hard ${GITHUB_REF##*/}
      - name: Reset Compare Branch
        run: |
          git fetch origin "${{ env.UPDATE_BRANCH }}:${{ env.UPDATE_BRANCH }}"
          git reset --hard ${{ env.UPDATE_BRANCH }}
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          title: Sync ${{ env.UPDATE_BRANCH }} to {{ matrix.syncto }}
          labels: |
            automated pr
            automerge
          token: ${{secrets.GITHUB_TOKEN}}
          branch: ${{ env.UPDATE_BRANCH }}-to-${{ matrix.syncto }}
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
      - name: Approve PR
        if: "${{ steps.cpr.outputs.pull-request-number }}"
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: "${{ secrets.DTI_DEVOPS_TOKEN }}"
          pull-request-number:  "${{ steps.cpr.outputs.pull-request-number }}"
          
# jobs:
#   sync-main-to-tc01d:
#     runs-on: ubuntu-latest
#     name: Syncing tc01d to develop
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Set up Node
#         uses: actions/setup-node@v1
#         with:
#           node-version: 12
#       - name: Opening pull request
#         id: pull
#         uses: tretuna/sync-branches@1.2.0
#         with:
#           GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
#           FROM_BRANCH: "tc01d"
#           TO_BRANCH: "develop"
