


entity type PlanetFile schema name "PLANET_RAW_F"{

    // foreign key
    planet_collector: !PlanetCollector

    raw_image_file: anyof(File)
    processed_image_file: anyof(File)

    query_url: !string

    // possible may need a storage place for np.ndarray/tf.tensor

    // the external path will be a combination of "~/yifang_guan/planet_collection/<filename>.tif"
    external_raw_path: string
    external_processed_path: string

    status: string enum('created','downloading','raw','preprocessing','preprocessed', 'predicting', 'predicted', 'error') post default '"created"'

    // Python functions that will do the work
    @py(env="image_download")
    @dependency(include="this")
    download_raw_image: member function(): any

    @py(env="image")
    @dependency(include="this")
    preprocess_raw_image: member function(): any

    @py(env="image")
    @dependency(include="this")
    predict_image: member function(): any

    /**
    * Callback to delete underlying file when removing a row.
    */
    beforeRemove: ~ js server

}
