/**
HycomDataset.c3typ
A collection of datasets from the HYCOM Thredds server.
*/
entity type HycomDataset schema name "HCM_DTST" {
    // Version of the dataset
    hycomVersion: string
    // Name of the dataset
    name: !string
    // Description of the dataset
    description: string    
    // The geospatial coverage of the dataset in degrees LAT/LON
    geospatialCoverage: !GeospatialCoverage
    // The resolution of the dataset in degrees LAT/LON
    geospatialResolution: GeospatialResolution post default "{latResolution: 0.04, lonResolution: 0.04}"
    // The url of the dataset catalog
    catalogUrl: string
    // the url of the FMRC catalog for this dataset
    fmrcCatalogUrl: string
    // A Collection of {@link HycomFMRC}s
    // NOTE: It might not be appropriate to put this collection here since not all record in this type will have FMRC data
    fmrcs: [HycomFMRC](dataset,id)
    // The total storage footprint of archived FMRC data in Bytes
    // This field could be refactored into the HycomFMRC type.
    fmrcArchiveSize: long integer stored calc 'sum(fmrcs.fmrcDataArchive.archiveSize)'
    // Use the XML catalog for Hycom FMRC data to create a Dataset entry
    //@py(env="hycom_1_0_0")
    //upsertHycomDatasetFromCatalog: function(url: string): HycomDataset
    // Use the XML catalog for Hycom FMRC data to create records for each available run collection
    @py(env="hycom_1_0_0")
    upsertFMRCs: member function(): [HycomFMRC]
    //
    @py(env="hycom_1_0_0")
    updateFMRCData: member function(fmrcSubsetOptions: !HycomSubsetOptions , fmrcDownloadOptions: !FMRCDownloadOptions, fmrcDownloadJobOptions: !FMRCDownloadJobOptions): BatchJob
}