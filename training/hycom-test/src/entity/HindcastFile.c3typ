/**
HindcastFile.c3typ
*/
entity type HindcastFile schema name "HNDCST_FL" {
    // The {@link HycomHindcast} that these files belong to.
    hindcastArchive: !HindcastArchive
    //
    subsetOptions: !HycomSubsetOptions
    // The start time for this file (could be consolodated into timeRange).
    start: !datetime
    // The end time for this file (could be consolodated into timeRange).
    end: !datetime
    // Status of the data download: "not_downloaded", "downloading", "downloaded", "error"
    status: string enum('downloaded','not_downloaded','downloading','error') post default '"not_downloaded"'
    // Whether the file has been processed into time series (depreicated).
    processed: boolean post default "false"
    // Number of time steps processed (depricated).
    stepsProcessed: int post default "0" 
    // The thredds url used to download this file.
    threddsUrl: string
    // The {@link File} object for this file.
    file: File
    /**
    * Download a file from the Hycom server and save to the C3 file system
    */
    @py(env=hycom_1_0_0)
    @dependency(include="this,hindcastArchive,hindcastArchive.hindcast,hindcastArchive.hindcast.urlPath,hindcastArchive.downloadOptions,hindcastArchive.SubsetOptions")
    download: member function(): File
    /**
    * Process a File to extract and upsert data
    * @param chunkSize
    *     The number of lat-pong pairs to upsert at once
    * @param maxConcurrency
    *     The maximum number of threads to use
    */
    @py(env=hycom_1_0_0)
    @dependency(include="this")
    process: member function(chunkSize: int = 23400, maxConcurrency: int = 8): int
}